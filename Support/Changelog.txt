Current Version: Public Release 2.1

	PENDING CHANGES FOR 2.1:
	=======================================
	  * ADD: Add non-consecutive HEX support
	  * ADD: Add low-battery detection
	  * ADD: Extra ISP speeds (settings menu only)
	  * ADD: Timeouts on target busy wait loops
	  * ADD: Checksum to stored program data

	  * BUG: EEPROM programming is very slow in all modes
	  
	IN PUBLIC RELEASE 2.1:
	=======================================
	  * Added in audio feedback for several options
	  * Removed direct dataflash programming code to save space (no one unused it anyway)
	  * "Data" replaced with "Flash" in DATASTORE STATS now that confusion with PRGM DATAFLASH MODE is not possible
	  * Fixed Fusebyte/Lockbyte bug in PROGRAM AVR mode
	  * Fixed EEPROM storage bug
	  * Fixed incorrect message size on CMD_UNKNOWN return in ProgramManager
	  * Fixed SPI_MULTI bounds error (off by one)
	  * Changed strings to use char rather than uint8_t, allowing for a generic makefile without GCC4.x specific flags
	  * Vin pin is now an external sleep input pin

	IN PUBLIC RELEASE 2.0:
	=======================================
	  * OSCCAL is now calibrated before any function involving the USART
	  * Removed the now unnessesary manual and auto calibration settings menu items
	  * Removed unused USART_TxString function
	  * EEPROM handling changed over to the (now M169 compatible) AVRLibC routines
	  * USART Rx interrupt moved to RingBuff.c and changed to the contents of the ringbuffer store routine for size/speed
	  * Fixed a few more dataflash programming-related glitches
	  * Moved the timeout setup function code to the TIMEOUT_TIMER_ON() macro
	  * Timeout system now uses Timer2, freeing up Timer1 for auto sleep
	  * Function parameters changed to const (where possible) for robustness
	  * Dataflash busy checking moved to a seperate routine for speed
	  * Added auto-powerdown with user settable timeout
	  * Correct command timeout error is now returned via the packet state machine instead of a command error
	  * Dataflash routines now make local copies of the SPI send routine pointer to save codespace and time
	  * EEPROM erasing changed so that only the used memory locations are cleared to minimise wear
	  * Added a ARRAY_UPPERBOUND macro to provide automatic code adjustment to increased array sizes
	  * Fixed include files capitolisation so that ButtLoad can be compiled on Unix systems (thanks to Bernd Trog)
	  * Added extra ISR attributes for smaller codesize/deletion protection on GCC4.x (also thanks to Bernd Trog)
	  * Status LED now turns orange while a target sync is attempted
	  * Timeout before checksum check no longer returns a bad checksum error
	  * Added an "PRGM ALL" option for PROGRAM AVR mode
	  * Obscure BUTTAG reading fault fixed where a tag preceeded by the first two or more tag header characters would not be recognized
	  * Fixed JPG schematics (thanks to C@PPER of AVRFreaks.net)
	  * Status LED is now turned off while in sleep mode to conserve power
	  * RingBuffer code changed to use uint8_t indexes rather than pointers
	  * Added in RESET MODE settings option
	  * SPI speed massivly reduced to prevent noise errors - this has no impact on storage time since it is the write delay that takes the longest time
	  * Fixed STORAGE MODE erase command saving routine
	  * LCD Driver now uses a forced inlined LCD_WriteChar routine (only called once) to allow for better optimisation
	  * Fixed main menu double push required on startup to change current item bug
	  * Changed my small but slow large integer division code over to the standard library code, should be faster with the expense of increased flash consumption
	  * Display now shows the wait message while searching for tags in stored memory
	  * ButtLoad now gives dummy responses to STK500-only parameter GET/SET commands, which the latest AVRStudio seems to like to send for some reason
	  * Turned off the USART U2X bit as it was not needed and reduced the reliability of the serial connection
	  * TagManager now uses a single uint32_t variable to decrease code size and tag scanning time
	  * System clock prescaling removed; buggy and wouldn't reduce power consumption anyway
	  * USI transfer routine re-written in ASM for maximum transfer speed
	  * OSCCAL routine changed over to a polled method rather than an interrupt method for optimal calibration
	  * Removed excess "DataflashInfo.CurrBuffByte++;" statement from ProgDataflash.c
	  * LCD is now shut down and powered off correctly when Butterfly enters sleep mode
	  * LCD and USART subsystems are now powered off (in addition to previous SPI and ADC) when not in use, via the Power Reduction Register
	  * Reduced LCD driver RAM and ISR time requirements
	  * Added in a progress bar when programming program or EEPROM data in PROGRAM AVR mode

	IN PUBLIC RELEASE 1.3:
	=======================================
	  * PROGRAMMING DONE/FAIL messaged display code altered for smaller codesize
	  * Fixed EEPROM poll bug - now uses wait poll if last byte in page is the same as the poll value
	  * USI Timer0 compare match routine rewritten in optimised ASM for speed, increased USI max speed value
	  * USI Speed/Compare Value table reordered and blank EEPROM check removed for code size (due to table reorder code still defaults to fastest setting if the EEPROM is blank)
	  * Removed the WriteCollision flag from the USI driver, since the routine waits for completion before exiting anyway
	  * Re-added main menu option for storage info (accidentally removed in 1.2)
	  * Changed dataflash erase (external) method to the faster block erase, slow erase now performed after computer reply to prevent a timeout
	  * Fixed typo in CMD_READ_OSCCAL_ISP section of the ProgramManager.c packet interpretation routine
	  * External dataflash total pages table corrected
	  * Dataflash access speed increased to 4MHz (up from ~150KHz)
	  * System clock is now prescaled down to 1MHz inside the main menu to save power
	  * Removed unnessesary CopyFlashToBuffer command in ProgramManager.c
	  * Added code to exit OSCCAL faster if a value within the tollerace cannot be found (closest value used)

	IN PUBLIC RELEASE 1.2:
	=======================================
	  * PROGRAMMING DONE and PROGRAMMING FAIL messages are now shown for a longer time so they can be fully read
	  * DATAFLASH ERROR now also shown in PRGM DATAFLASH MODE if no attached dataflash is found
	  * ISP short detection routines removed for technical reasons
	  * Atmel LCD driver rewritten for size and speed

	IN PUBLIC RELEASE 1.1:
	=======================================
	  * PROGRAMMING DONE message changed so that it will show PROGRAMMING FAIL after an error
	  * Unnessesary clearing of invalid JoyStatus values removed
	  * Seperate external dataflash /CS pin removed, function integrated into slave AVR /RESET pin

	IN PUBLIC RELEASE 1.0:
	=======================================
	  * Fixed ISP short detection bug (always returning ISP short)
	  * ISP Short detection system now checks for Dataflash /CS short correctly
	  * Added SLEEP MODE option
	  * Fixed verify fail on large flash micros bug
	  * Added ButtTag functionality
	  * Added Storage sizes function
	  * Fixed dataflash mask address bug
	  * Fixed /RESET line not being released from hi-impeedance bug
	  * MAIN_IntToStr now forces null-termination of strings
	  * Extended address checking moved to a new subroutine; flag now cleared after command
	  * Interrupts now re-enabled while writing to EEPROM rather than after operation complete
	  * Packet timeout increased to slightly more than the computer timeout
	  * Added function to jump to the bootloader
	  * Programming of the data will not commence if no erase commands are in memory